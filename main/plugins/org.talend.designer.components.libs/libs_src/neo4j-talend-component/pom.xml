<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.neo4j.talend</groupId>
    <artifactId>neo4j-talend-component</artifactId>
    <packaging>jar</packaging>
    <version>1.2</version>
    <name>Neo4j Talend components</name>
    <description>This project contains a list of Talend component for Neo4j.</description>

    <!-- =========== -->
    <!-- = License = -->
    <!-- =========== -->
    <licenses>
        <license>
            <name>MIT</name>
            <url>https://raw.githubusercontent.com/sim51/neo4j-talend-component/master/LICENSE</url>
        </license>
    </licenses>

    <!-- ============== -->
    <!-- = Bugtracker = -->
    <!-- ============== -->
    <issueManagement>
        <system>Github</system>
        <url>https://github.com/sim51/neo4j-talend-component/issues</url>
    </issueManagement>

    <!-- ====================== -->
    <!-- = Project developers = -->
    <!-- ====================== -->
    <developers>
        <developer>
            <id>bsimard</id>
            <name>Beno√Æt SIMARD</name>
            <email>github@bsimard.com</email>
        </developer>
    </developers>

    <properties>
        <!-- General props-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>

        <!-- Some desp props-->
        <neo4j.version>3.2.6</neo4j.version>

        <!-- Plugin version -->
        <maven.plugin.compiler>3.5.1</maven.plugin.compiler>
        <maven-resources-plugin>2.7</maven-resources-plugin>
        <maven-jar-plugin>2.6</maven-jar-plugin>
        <maven-dependency-plugin>2.10</maven-dependency-plugin>
        <maven-antrun-plugin>1.8</maven-antrun-plugin>

        <!-- Plugin report version -->
        <maven.plugin.site>3.5</maven.plugin.site>
        <maven.plugin.javadoc>2.10.3</maven.plugin.javadoc>
        <maven.plugin.checkstyle>2.17</maven.plugin.checkstyle>
        <maven.plugin.jxr>2.5</maven.plugin.jxr>
        <maven.plugin.surefire>2.19.1</maven.plugin.surefire>
        <maven.plugin.cobertura>2.7</maven.plugin.cobertura>
        <maven.plugin.pmd>3.5</maven.plugin.pmd>
        <maven.plugin.findbugs>3.0.1</maven.plugin.findbugs>
        <maven.plugin.version>2.2</maven.plugin.version>
        <maven.plugin.taglist>2.4</maven.plugin.taglist>
        <maven.plugin.scm-publish>1.1</maven.plugin.scm-publish>
        <maven.plugin.projectinfo>2.9</maven.plugin.projectinfo>
        <maven.plugin.assembly>2.6</maven.plugin.assembly>
        <maven.plugin.asciidoctor>1.5.3</maven.plugin.asciidoctor>
        <maven.plugin.changelog>2.3</maven.plugin.changelog>
        <maven.plugin.coverall>4.1.0</maven.plugin.coverall>

        <!-- Asciidoctor version -->
        <asciidoctorj.version>1.5.4</asciidoctorj.version>
        <jruby.version>1.7.21</jruby.version>

        <!-- Maven site skin -->
        <site.skin.groupId>org.apache.maven.skins</site.skin.groupId>
        <site.skin.artifactId>maven-fluido-skin</site.skin.artifactId>
        <site.skin.version>1.5</site.skin.version>
        
        
        <talend.nexus.url>https://artifacts-oss.talend.com</talend.nexus.url>
    </properties>

    <!-- ======================== -->
    <!-- = Project dependencies = -->
    <!-- ======================== -->
    <dependencies>
        <!-- Neo4j dependencies -->
        <dependency>
            <groupId>org.neo4j</groupId>
            <artifactId>neo4j</artifactId>
            <version>${neo4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.neo4j</groupId>
            <artifactId>neo4j-import-tool</artifactId>
            <version>${neo4j.version}</version>
        </dependency>
        <!-- Talend log4j library -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.16</version>
            <scope>provided</scope>
        </dependency>
        <!-- JUnit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!-- ========= -->
    <!-- = Build = -->
    <!-- ========= -->
    <build>
        <resources>
            <resource>
                <directory>src/main/components</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.plugin.compiler}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin}</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/components</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-resources-test</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testResources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/test-classes</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Generate project jar into 'component/lib' folder -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin}</version>
                <configuration>
                    <outputDirectory>${project.build.directory}/components/lib</outputDirectory>
                    <excludes>
                        <exclude>**/tNeo4j*</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- Copy all project dependencies into 'component/lib' folder -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin}</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>${project.build.directory}/components/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Adding project dependencies into xml component -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven-antrun-plugin}</version>
                <dependencies>
                    <dependency>
                        <groupId>ant-contrib</groupId>
                        <artifactId>ant-contrib</artifactId>
                        <version>1.0b3</version>
                        <exclusions>
                            <exclusion>
                                <groupId>ant</groupId>
                                <artifactId>ant</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <id>copy-resources</id>
                        <configuration>
                            <exportAntProperties>true</exportAntProperties>
                            <tasks>
                                <!-- add the ant tasks from ant-contrib -->
                                <taskdef resource="net/sf/antcontrib/antlib.xml" classpathref="maven.plugin.classpath"/>

                                <!-- Construct import deps list -->
                                <var name="import.set" value="&lt;!-- Generated By maven-dependency-plugin and maven-antrun-plugin. The first copy all the dependencies to a directory and the second browse it to construct the import section.--&gt;" />
                                <for param="file">
                                    <path>
                                        <fileset dir="${project.build.directory}/components/lib" includes="*.jar"/>
                                    </path>
                                    <sequential>
                                        <var name="basename" unset="true"/>
                                        <var name="basename.strip" unset="true"/>
                                        <basename file="@{file}" property="basename"/>
                                        <basename file="@{file}" property="basename.strip" suffix=".jar"/>
                                        <var name="filenames" value="${basename}"/>
                                        <var name="filenames.strip" value="${basename.strip}"/>
                                        <var name="import.clause"
                                             value='&lt;IMPORT MODULE="${filenames}" NAME="${filenames.strip}" UrlPath="platform:/plugin/org.talend.libraries.neo4j/lib/${filenames}" REQUIRED="true"/&gt;'/>
                                        <var name="import.set" value="${import.set}${line.separator}${import.clause}"/>
                                    </sequential>
                                </for>

                                <!-- Replace import into *_java.xml files -->
                                <for param="file">
                                    <path>
                                        <fileset dir="${project.build.directory}/components" includes="**/*_java.xml"/>
                                    </path>
                                    <sequential>
                                        <replace file="@{file}">
                                            <replacefilter token="&lt;IMPORTS/&gt;"
                                                           value="&lt;IMPORTS&gt;${line.separator}${import.set}${line.separator}&lt;/IMPORTS&gt;"/>
                                        </replace>
                                    </sequential>
                                </for>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Make a zip of the component folder-->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>${maven.plugin.assembly}</version>
                <configuration>
                    <descriptors>
                        <descriptor>src/main/assembly/zip.xml</descriptor>
                    </descriptors>
                    <finalName>${project.artifactId}-${project.version}_${neo4j.version}</finalName>
                    <outputDirectory>${project.build.directory}/site/binaries</outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id> <!-- this is used for inheritance merges -->
                        <phase>package</phase> <!-- append to the packaging phase. -->
                        <goals>
                            <goal>single</goal> <!-- goals == mojos -->
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Maven site/reporting configuration -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${maven.plugin.site}</version>
                <configuration>
                    <generateReports>true</generateReports>
                    <generateSitemap>true</generateSitemap>
                    <relativizeDecorationLinks>false</relativizeDecorationLinks>
                    <locales>en</locales>
                    <inputEncoding>UTF-8</inputEncoding>
                    <outputEncoding>UTF-8</outputEncoding>
                    <locales>en</locales>
                    <asciidoc>
                        <attributes>
                            <project-version>${project.version}</project-version>
                            <project-artifactId>${project.artifactId}</project-artifactId>
                            <neo4j-version>${neo4j.version}</neo4j-version>
                        </attributes>
                    </asciidoc>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-descriptor</id>
                        <goals>
                            <goal>attach-descriptor</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <!-- Just a hack for now to force this lib on version 1.7-->
                    <dependency>
                        <groupId>org.apache.maven.doxia</groupId>
                        <artifactId>doxia-core</artifactId>
                        <version>1.7</version>
                    </dependency>
                    <!-- Generate site with asciidoctor -->
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctor-maven-plugin</artifactId>
                        <version>${maven.plugin.asciidoctor}</version>
                    </dependency>
                    <!-- Comment this section to use the default jruby artifact provided by the plugin -->
                    <dependency>
                        <groupId>org.jruby</groupId>
                        <artifactId>jruby-complete</artifactId>
                        <version>${jruby.version}</version>
                    </dependency>
                    <!-- Comment this section to use the default AsciidoctorJ artifact provided by the plugin -->
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj</artifactId>
                        <version>${asciidoctorj.version}</version>
                    </dependency>
                    <!-- Adding custom skin -->
                    <dependency>
                        <groupId>${site.skin.groupId}</groupId>
                        <artifactId>${site.skin.artifactId}</artifactId>
                        <version>${site.skin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>${maven.plugin.jxr}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven.plugin.surefire}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.plugin.javadoc}</version>
                <configuration>
                    <excludePackageNames>generated</excludePackageNames>
                    <failOnError>false</failOnError>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven.plugin.checkstyle}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${maven.plugin.projectinfo}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven.plugin.pmd}</version>
                <configuration>
                    <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
                    <!-- The minimum tokens before a violation -->
                    <minimumTokens>100</minimumTokens>
                    <!-- Turn off if no xref report -->
                    <linkXRef>true</linkXRef>
                    <verbose>true</verbose>
                    <targetJdk>${java.version}</targetJdk>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${maven.plugin.findbugs}</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${maven.plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>taglist-maven-plugin</artifactId>
                <version>${maven.plugin.taglist}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-changelog-plugin</artifactId>
                <version>${maven.plugin.changelog}</version>
            </plugin>
        </plugins>
    </reporting>

    <!-- =========== -->
    <!-- = Profile = -->
    <!-- =========== -->
    <profiles>
        <profile>
            <id>coverage</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>cobertura-maven-plugin</artifactId>
                        <version>${maven.plugin.cobertura}</version>
                        <configuration>
                            <format>xml</format>
                            <maxmem>256m</maxmem>
                            <!-- aggregated reports for multi-module projects -->
                            <aggregate>true</aggregate>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.eluder.coveralls</groupId>
                        <artifactId>coveralls-maven-plugin</artifactId>
                        <version>${maven.plugin.coverall}</version>
                        <configuration>
                            <repoToken>${coverall.token}</repoToken>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <!-- ================ -->
    <!-- = Repositories = -->
    <!-- ================ -->
    <repositories>
        <!-- Neo4j repository -->
        <repository>
            <id>neo4j-releases</id>
            <name>Neo4j</name>
            <url>http://m2.neo4j.org/content/repositories/public/</url>
        </repository>
    </repositories>
    
    
    <distributionManagement>
		<snapshotRepository>
			<id>talend_nexus_deployment</id>
			<url>${talend.nexus.url}/nexus/content/repositories/TalendOpenSourceSnapshot/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</snapshotRepository>
		<repository>
			<id>talend_nexus_deployment</id>
			<url>${talend.nexus.url}/nexus/content/repositories/TalendOpenSourceRelease/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
	</distributionManagement>
</project>
